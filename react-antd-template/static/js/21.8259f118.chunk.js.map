{"version":3,"sources":["mock/utils.ts","mock/roles.ts","mock/user.ts","mock/article.ts","mock/index.ts"],"names":["resFn","data","code","message","MockApiSleepTime","listIndex","list","id","roleName","checkedKeys","halfCheckedKeys","isShow","getRoleInfo","roleId","filter","item","index","username","token","Array","fill","map","Mock","mock","timestamp","Random","date","author","title","markdown","articleInitialValue","hot","dateTime","req","reqBody","JSON","parse","body","_userInfo","Number","undefined","_roleInfo","_body","authList","push","_list","total","length","remark","text","value","_id","forEach","current","pageSize","_start","_end","slice","_info"],"mappings":"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","file":"static/js/21.8259f118.chunk.js","sourcesContent":["import { MockApiSleepTime } from \"@/model\";\r\n\r\ninterface ReqFn {\r\n  <Res>(data?: Res, code?: number, message?: string): {\r\n    code: number;\r\n    data: Res;\r\n    message: string;\r\n  };\r\n}\r\n/** 封装返回 */\r\nexport const resFn: ReqFn = (data: any = null, code = 200, message = `mock api ok,times ${MockApiSleepTime}s`) => {\r\n  return {\r\n    code,\r\n    data,\r\n    message,\r\n  };\r\n};\r\n","import { resFn } from \"./utils\";\r\ninterface MockRoleItem extends RoleItem {\r\n  isShow?: boolean;\r\n}\r\nlet listIndex = 2;\r\nlet list: MockRoleItem[] = [\r\n  {\r\n    id: 0,\r\n    roleName: \"superAdmin\",\r\n    checkedKeys: [],\r\n    halfCheckedKeys: [],\r\n    isShow: false,\r\n  },\r\n  {\r\n    id: 1,\r\n    roleName: \"common\",\r\n    checkedKeys: [\r\n      \"/console/demo\",\r\n      \"/console/auth-manage\",\r\n      \"/console/demo/hook-modal\",\r\n      \"/console/demo/hook-log\",\r\n      \"/console/demo/vs-version\",\r\n      \"/console/auth-manage/role-manage\",\r\n    ],\r\n    halfCheckedKeys: [\"/console\"],\r\n  },\r\n];\r\n\r\nexport const getList = () => {\r\n  const _list = list.filter((item) => item.isShow !== false);\r\n  return resFn<ResDataRoleList>({ list: _list, total: _list.length });\r\n};\r\nexport const roleCreate = (req: any) => {\r\n  const reqBody = JSON.parse(req.body);\r\n\r\n  list.push({\r\n    ...reqBody,\r\n    remark: `${reqBody.remark} \\n如果用动态角色登录后，无法直接访问网址，请打开控制台，清除本地数据后使用！`,\r\n    id: listIndex++,\r\n  });\r\n  return resFn();\r\n};\r\nexport const update = (req: any) => {\r\n  const reqBody: ReqDataRoleUpdate = JSON.parse(req.body);\r\n  list = list.map((item) => {\r\n    if (item.id != reqBody.id) return item;\r\n    return { ...item, ...reqBody };\r\n  });\r\n  return resFn();\r\n};\r\n/** 获取用户信息 */\r\nexport const getRoleInfo = (roleId: number) => {\r\n  return list.filter((item) => item.id === roleId)[0] || { halfCheckedKeys: [], checkedKeys: [] };\r\n};\r\n\r\nexport const getOptionList = () => {\r\n  const _list = list\r\n    .filter((item) => item.isShow !== false)\r\n    .map((item) => ({ text: item.roleName || \"\", value: item.id }));\r\n  return resFn<OptionItem[]>(_list);\r\n};\r\n","import { getRoleInfo } from \"./roles\";\r\nimport { resFn } from \"./utils\";\r\nlet index = 2;\r\ninterface MockUserItem extends UserItem {\r\n  isShow?: false;\r\n  token: string;\r\n}\r\nlet list: MockUserItem[] = [\r\n  { id: 0, username: \"superAdmin\", roleId: 0, token: \"superAdmin\", isShow: false, roleName: getRoleInfo(0)?.roleName },\r\n  { id: 1, username: \"common\", roleId: 1, token: \"common\", roleName: getRoleInfo(1)?.roleName },\r\n];\r\n\r\nexport const getUserInfo = (req: any) => {\r\n  const reqBody: ReqDataUserInfo = JSON.parse(req.body);\r\n  const _userInfo = list.filter((item) => item.id == Number(reqBody.id))[0];\r\n  if (!_userInfo) return resFn(undefined, 401, \"没有数据\");\r\n  const _roleInfo = getRoleInfo(_userInfo.roleId);\r\n  const _body: ResDataLogin = {\r\n    ..._userInfo,\r\n    roleName: _roleInfo.roleName,\r\n    authList: [..._roleInfo.checkedKeys, ..._roleInfo.halfCheckedKeys],\r\n  };\r\n  return resFn(_body);\r\n};\r\nexport const reqLogin = (req: any) => {\r\n  const reqBody: ReqDataLogin = JSON.parse(req.body);\r\n  const _userInfo = list.filter((item) => item.username == reqBody.username)[0];\r\n  if (!_userInfo) return resFn(undefined, 401, \"没有数据\");\r\n  const _roleInfo = getRoleInfo(_userInfo.roleId);\r\n  const _body: ResDataLogin = {\r\n    ..._userInfo,\r\n    roleName: _roleInfo.roleName,\r\n    authList: [..._roleInfo.checkedKeys, ..._roleInfo.halfCheckedKeys],\r\n  };\r\n  return resFn<ResDataLogin>(_body);\r\n};\r\n\r\nexport const create = (req: any) => {\r\n  const reqBody: ReqDataUserCreate = JSON.parse(req.body);\r\n  const _roleInfo = getRoleInfo(reqBody.roleId);\r\n  list.push({\r\n    id: index++,\r\n    ...reqBody,\r\n    roleName: _roleInfo.roleName || \"\",\r\n    token: reqBody.username,\r\n  });\r\n  return resFn();\r\n};\r\nexport const update = (req: any) => {\r\n  const reqBody: ReqDataUserUpdate = JSON.parse(req.body);\r\n  const _roleInfo = getRoleInfo(reqBody.roleId);\r\n  list = list.map((item) => {\r\n    if (item.id != reqBody.id) return item;\r\n    return {\r\n      ...item,\r\n      ...reqBody,\r\n      roleName: _roleInfo.roleName || \"\",\r\n    };\r\n  });\r\n  return resFn();\r\n};\r\nexport const getList = () => {\r\n  //req: any\r\n  // const reqBody: ReqDataUserList = JSON.parse(req.body);\r\n  const _list = list.filter((item) => item.isShow !== false);\r\n  return resFn<ResDataUserList>({ list: _list, total: _list.length });\r\n};\r\n","import { articleInitialValue } from \"@/model\";\r\nimport Mock from \"mockjs\";\r\nimport { resFn } from \"./utils\";\r\n//参考 https://github.com/PanJiaChen/vue-element-admin/blob/master/mock/article.js\r\n// const image_uri = \"https://wpimg.wallstcn.com/e4558086-631c-425c-9430-56ffb46e70b3\";\r\nlet listIndex = 3;\r\n\r\nconst list: ArticleInfoItem[] = Array(2)\r\n  .fill(1)\r\n  .map(() => {\r\n    return Mock.mock({\r\n      id: \"@increment\",\r\n      timestamp: +Mock.Random.date(\"T\"),\r\n      author: \"@first\",\r\n      // reviewer: \"@first\",\r\n      title: \"@title(5, 10)\",\r\n      // content_short: \"mock data\",\r\n      markdown: articleInitialValue,\r\n      // forecast: \"@float(0, 100, 2, 2)\",\r\n      hot: \"@integer(0, 5)\",\r\n      // \"type|1\": [\"CN\", \"US\", \"JP\", \"EU\"],\r\n      // \"status|1\": [\"published\", \"draft\"],\r\n      dateTime: \"@datetime\",\r\n      // comment_disabled: true,\r\n      // pageviews: \"@integer(300, 5000)\",\r\n      // image_uri,\r\n      // platforms: [\"a-platform\"],\r\n    });\r\n  });\r\n\r\nexport const create = (req: any) => {\r\n  const reqBody: ReqDataArticleCreate = JSON.parse(req.body);\r\n  const _id = listIndex++;\r\n  list.push(\r\n    Mock.mock({\r\n      id: _id,\r\n      timestamp: +Mock.Random.date(\"T\"),\r\n      // author: \"@first\",\r\n      // title: \"@title(5, 10)\",\r\n      // content: baseContent,\r\n      hot: \"@integer(0, 5)\",\r\n      dateTime: \"@datetime\",\r\n      ...reqBody,\r\n    })\r\n  );\r\n  return resFn<ResDataArticleCreate>({ id: _id });\r\n};\r\nexport const update = (req: any) => {\r\n  const reqBody: ReqDataArticleUpdate = JSON.parse(req.body);\r\n  list.forEach((item, index) => {\r\n    if (item.id == reqBody.id) list[index] = { ...item, ...reqBody };\r\n  });\r\n  return resFn();\r\n};\r\nexport const getList = (req: any) => {\r\n  const reqBody: ReqDataArticleList = JSON.parse(req.body);\r\n  reqBody.current = Number(reqBody.current);\r\n  reqBody.pageSize = Number(reqBody.pageSize);\r\n  const _start = (reqBody.current - 1) * reqBody.pageSize;\r\n  const _end = _start + reqBody.pageSize;\r\n  const _list = list.slice(_start, _end);\r\n  return resFn<ResDataArticleList>({ list: _list, total: list.length });\r\n};\r\nexport const info = (req: any) => {\r\n  const reqBody: ReqDataArticleInfo = JSON.parse(req.body);\r\n  const _info = list.filter((item) => item.id == reqBody.id)[0];\r\n  return resFn<ResDataArticleInfo>(_info);\r\n};\r\n","import Mock from \"mockjs\";\r\nimport * as user from \"./user\";\r\nimport * as Roles from \"./roles\";\r\nimport * as Article from \"./article\";\r\n/**\r\n * 仅仅为了容易处理接受值，使用post方式，生产中以实际情况为准\r\n */\r\n\r\nMock.mock(\"/mock/api/user/info\", \"post\", user.getUserInfo);\r\nMock.mock(\"/mock/api/user/login\", \"post\", user.reqLogin);\r\nMock.mock(\"/mock/api/user/create\", \"post\", user.create);\r\nMock.mock(\"/mock/api/user/update\", \"post\", user.update);\r\nMock.mock(\"/mock/api/user/list\", \"post\", user.getList);\r\n//\r\nMock.mock(\"/mock/api/role/list\", \"post\", Roles.getList);\r\nMock.mock(\"/mock/api/role/create\", \"post\", Roles.roleCreate);\r\nMock.mock(\"/mock/api/role/update\", \"post\", Roles.update);\r\nMock.mock(\"/mock/api/role/option-list\", \"get\", Roles.getOptionList);\r\n\r\nMock.mock(\"/mock/api/article/create\", \"post\", Article.create);\r\nMock.mock(\"/mock/api/article/update\", \"post\", Article.update);\r\nMock.mock(\"/mock/api/article/list\", \"post\", Article.getList);\r\nMock.mock(\"/mock/api/article/info\", \"post\", Article.info);\r\n"],"sourceRoot":""}