{"version":3,"sources":["console-layout/content-main.tsx","components/app-table.tsx","components/form-role-option.tsx","views/auth-manage/user-manage/hook-modal-create.tsx","views/auth-manage/user-manage/hook-modal-update.tsx","views/auth-manage/user-manage/index.tsx"],"names":["ContentMain","props","className","children","AppTable","useState","pagination","setPagination","useEffect","showQuickJumper","showTotal","String","total","Option","Select","isUnMount","FormRoleOption","value","onChange","list","setList","loading","setLoading","getList","a","reqRoleOptionList","res","code","appMessage","error","message","data","undefined","placeholder","map","item","index","text","layout","labelCol","span","wrapperCol","useModalCreate","isShowRef","useRef","current","setIsShow","_Button","type","onClick","Form","useForm","form","_Modal","onOk","title","visible","confirmLoading","onCancel","validateFields","catch","_form","reqUserCreate","success","Item","name","label","rules","required","Button","Modal","useModalUpdate","activeItem","setFieldsValue","username","roleId","reqUserUpdate","id","Number","unmount","AuthManage","setRes","reqUserList","page","sn","getTableSN","pageSize","setPage","ModalCreate","ModalUpdate","columns","key","width","dataIndex","render","align","resetFields","style","marginTop","dataSource","rowKey"],"mappings":"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","file":"static/js/11.99651a95.chunk.js","sourcesContent":["import React from \"react\";\r\ninterface Props {\r\n  [key: string]: any;\r\n}\r\n/**主内容区 可以统一ui 并减少一层dom */\r\nconst ContentMain: React.FC<ViewProps<Props>> = (props) => {\r\n  const { className = \"\" } = props;\r\n  //render\r\n  return <main className={`content-main ${className}`}>{props.children}</main>;\r\n};\r\nexport default ContentMain;\r\n","import { Table } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\ninterface Props extends Antd.TableProps<any> {\r\n  [key: string]: any;\r\n}\r\nconst AppTable: React.FC<ViewProps<Props>> = (props) => {\r\n  const [pagination, setPagination] = useState<false | Antd.TablePaginationConfig | undefined>();\r\n  useEffect(() => {\r\n    if (!props.pagination) return;\r\n    setPagination({\r\n      ...props.pagination,\r\n      showQuickJumper: true,\r\n      showTotal: () => props.pagination && `共 ${String(props.pagination.total || 0)} 条`,\r\n    });\r\n  }, [props.pagination]);\r\n  //render\r\n  return <Table {...props} pagination={pagination}></Table>;\r\n};\r\nexport default AppTable;\r\n","import { reqRoleOptionList } from \"@/apis\";\r\nimport { appMessage } from \"@/plugins/antd\";\r\nimport { Select } from \"antd\";\r\nconst { Option } = Select;\r\nimport React, { useEffect, useState } from \"react\";\r\ninterface Props {\r\n  [key: string]: any;\r\n  value?: number;\r\n  onChange?: (value: number) => void;\r\n}\r\nlet isUnMount = false;\r\nconst FormRoleOption: React.FC<ViewProps<Props>> = (props) => {\r\n  const { className = \"\", value, onChange } = props;\r\n  const [list, setList] = useState<OptionItem[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const getList = async () => {\r\n    if (loading) return;\r\n    setLoading(true);\r\n    const res = await reqRoleOptionList();\r\n    if (isUnMount) return; //避免卸载后渲染\r\n    setLoading(false);\r\n    if (res.code != 200) appMessage.error(res.message || \"获取数据失败！\");\r\n    setList(res.data);\r\n    if (value === undefined) onChange && onChange(res.data[0].value);\r\n  };\r\n  useEffect(() => {\r\n    isUnMount = false;\r\n    getList();\r\n    return () => {\r\n      isUnMount = true;\r\n    };\r\n  }, []);\r\n  //render\r\n  return (\r\n    <Select className={className} loading={loading} value={value} onChange={onChange} placeholder=\"请选择\">\r\n      {list.map((item, index) => (\r\n        <Option value={item.value} key={`${item.value}-${index}`}>\r\n          {item.text}\r\n        </Option>\r\n      ))}\r\n    </Select>\r\n  );\r\n};\r\nexport default FormRoleOption;\r\n","import { reqUserCreate } from \"@/apis\";\r\nimport AppInput from \"@/components/app-input\";\r\nimport FormRoleOption from \"@/components/form-role-option\";\r\nimport { appMessage } from \"@/plugins/antd\";\r\nimport { Button, Form, Modal } from \"antd\";\r\nimport React, { useRef, useState } from \"react\";\r\n\r\ninterface ButtonProps {\r\n  [key: string]: any;\r\n}\r\ninterface ModalProps {\r\n  onOk?: () => void;\r\n}\r\n\r\nconst layout = {\r\n  labelCol: { span: 5 },\r\n  wrapperCol: { span: 19 },\r\n};\r\n\r\nconst useModalCreate = () => {\r\n  const isShowRef = useRef(false);\r\n  const [, setIsShow] = useState(isShowRef.current);\r\n  const _Button = useRef<React.FC<ViewProps<ButtonProps>>>((props) => {\r\n    return (\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          setIsShow((isShowRef.current = !isShowRef.current)); //触发更新\r\n        }}>\r\n        {props.children}\r\n      </Button>\r\n    );\r\n  });\r\n  const [form] = Form.useForm<FormDataUserCreate>();\r\n\r\n  const _Modal = useRef<React.FC<ViewProps<ModalProps>>>((props) => {\r\n    const { onOk } = props;\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    return (\r\n      <Modal\r\n        title=\"添加角色\"\r\n        visible={isShowRef.current}\r\n        confirmLoading={loading}\r\n        onCancel={() => {\r\n          setIsShow((isShowRef.current = false));\r\n        }}\r\n        onOk={async () => {\r\n          const _form = await form.validateFields().catch(() => undefined);\r\n          if (!_form || loading) return;\r\n          setLoading(true);\r\n          const res = await reqUserCreate(_form);\r\n          setLoading(false);\r\n          if (res.code != 200) return appMessage.error(res.message || \"添加失败！\");\r\n          appMessage.success(res.message || \"添加成功！\");\r\n          setIsShow((isShowRef.current = false));\r\n          onOk && onOk();\r\n        }}>\r\n        <Form form={form} {...layout}>\r\n          <Form.Item name=\"username\" label=\"用户名称\" rules={[{ required: true }]}>\r\n            <AppInput placeholder=\"请输入用户名称\" />\r\n          </Form.Item>\r\n          <Form.Item name=\"roleId\" label=\"所属角色\" rules={[{ required: true, message: \"请选择所属角色\" }]}>\r\n            <FormRoleOption />\r\n          </Form.Item>\r\n          {/* <Form.Item name=\"remark\" label=\"备注\">\r\n            <Input.TextArea placeholder=\"最多输入100位字符\" maxLength={100} />\r\n          </Form.Item> */}\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  });\r\n  return {\r\n    Button: _Button.current,\r\n    Modal: _Modal.current,\r\n  };\r\n};\r\nexport default useModalCreate;\r\n","import { reqUserUpdate } from \"@/apis\";\r\nimport AppInput from \"@/components/app-input\";\r\nimport FormRoleOption from \"@/components/form-role-option\";\r\nimport { appMessage } from \"@/plugins/antd\";\r\nimport { Button, Form, Modal } from \"antd\";\r\nimport React, { useRef, useState } from \"react\";\r\n// import FormItemAuthTree from \"../components/form-item-auth-tree\";\r\n\r\ninterface ButtonProps {\r\n  item: UserItem;\r\n}\r\ninterface ModalProps {\r\n  onOk?: () => void;\r\n}\r\n\r\nconst layout = {\r\n  labelCol: { span: 5 },\r\n  wrapperCol: { span: 19 },\r\n};\r\n\r\nconst useModalUpdate = () => {\r\n  const isShowRef = useRef(false);\r\n  const activeItem = useRef<UserItem>();\r\n  const [, setIsShow] = useState(isShowRef.current);\r\n  const _Button = useRef<React.FC<ViewProps<ButtonProps>>>((props) => {\r\n    return (\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          const { item } = props;\r\n          setIsShow((isShowRef.current = !isShowRef.current)); //触发更新\r\n          activeItem.current = item;\r\n          form.setFieldsValue({\r\n            username: item.username,\r\n            roleId: item.roleId,\r\n          });\r\n        }}>\r\n        {props.children}\r\n      </Button>\r\n    );\r\n  });\r\n  const [form] = Form.useForm<FormDataUserCreate>();\r\n\r\n  const _Modal = useRef<React.FC<ViewProps<ModalProps>>>((props) => {\r\n    const { onOk } = props;\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    return (\r\n      <Modal\r\n        title=\"编辑用户\"\r\n        visible={isShowRef.current}\r\n        confirmLoading={loading}\r\n        onCancel={() => {\r\n          setIsShow((isShowRef.current = false));\r\n        }}\r\n        onOk={async () => {\r\n          const _form = await form.validateFields().catch(() => undefined);\r\n          if (!_form || loading || !activeItem.current) return;\r\n          setLoading(true);\r\n          const res = await reqUserUpdate({ id: Number(activeItem.current.id), ..._form });\r\n          setLoading(false);\r\n          if (res.code != 200) return appMessage.error(res.message || \"更新失败！\");\r\n          appMessage.success(res.message || \"更新成功！\");\r\n          setIsShow((isShowRef.current = false));\r\n          onOk && onOk();\r\n        }}>\r\n        <Form form={form} {...layout}>\r\n          <Form.Item name=\"username\" label=\"用户名称\" rules={[{ required: true }]}>\r\n            <AppInput placeholder=\"请输入用户名称\" />\r\n          </Form.Item>\r\n          <Form.Item name=\"roleId\" label=\"所属角色\" rules={[{ required: true, message: \"请选择所属角色\" }]}>\r\n            <FormRoleOption />\r\n          </Form.Item>\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  });\r\n  return {\r\n    Button: _Button.current,\r\n    Modal: _Modal.current,\r\n  };\r\n};\r\nexport default useModalUpdate;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Space } from \"antd\";\r\nimport AppInput from \"@/components/app-input\";\r\nimport useModalCreate from \"./hook-modal-create\";\r\nimport ContentMain from \"@/console-layout/content-main\";\r\nimport useModalUpdate from \"./hook-modal-update\";\r\nimport AppTable from \"@/components/app-table\";\r\nimport { reqUserList } from \"@/apis\";\r\nimport { appMessage } from \"@/plugins/antd\";\r\nimport { getTableSN } from \"@/utils\";\r\ninterface Props {\r\n  [key: string]: any;\r\n}\r\nlet unmount = false;\r\nconst AuthManage: React.FC<ViewProps<Props>> = (props) => {\r\n  useEffect(() => {\r\n    unmount = false;\r\n    return () => {\r\n      unmount = true;\r\n    };\r\n  }, []);\r\n  //\r\n  const { className = \"\" } = props;\r\n  const [res, setRes] = useState({ list: [] as UserItem[], total: 0 });\r\n  const [loading, setLoading] = useState(false);\r\n  const getList = async () => {\r\n    const _form = await form.validateFields().catch(() => undefined);\r\n    if (loading || !_form) return;\r\n    setLoading(true);\r\n    const res = await reqUserList({ ...page, ..._form });\r\n    if (unmount) return;\r\n    setLoading(false);\r\n    if (res.code != 200) return appMessage.error(res.message || \"加载数据失败！\");\r\n    // appMessage.success(res.message || \"加载数据成功！\");//列表数据一般不提示\r\n    res.data.list = res.data.list.map((item, index) => ({ ...item, sn: getTableSN(page, index) }));\r\n    setRes({ list: res.data.list, total: res.data.total });\r\n  };\r\n  const [page, setPage] = useState<ReqPageData>({ current: 1, pageSize: 10 });\r\n  useEffect(() => {\r\n    getList();\r\n  }, [page]);\r\n  const [form] = Form.useForm<FormDataUserList>();\r\n  const ModalCreate = useModalCreate();\r\n  const ModalUpdate = useModalUpdate();\r\n\r\n  let columns: Antd.TableColumnsType<UserItem> = [\r\n    { key: \"sn\", title: \"序号\", width: 100 },\r\n    { key: \"username\", title: \"用户名称\" },\r\n    { key: \"roleName\", title: \"所属角色\" },\r\n    {\r\n      key: \"actions\",\r\n      dataIndex: \"actions\",\r\n      title: \"操作\",\r\n      width: 300,\r\n      render(text, item) {\r\n        //\r\n        return (\r\n          <Space>\r\n            <ModalUpdate.Button item={item}>编辑</ModalUpdate.Button>\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  columns = columns.map((item) => ({ ...item, align: \"center\", dataIndex: item.key }));\r\n  //render\r\n  return (\r\n    <ContentMain className={className}>\r\n      <header>\r\n        <Form layout=\"inline\" form={form}>\r\n          <Form.Item label=\"用户名称\" name=\"username\">\r\n            <AppInput placeholder=\"请输入用户名称\" />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Space>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  if (page.current == 1) return getList();\r\n                  setPage({ ...page, current: 1 });\r\n                }}>\r\n                查询\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  form.resetFields();\r\n                  getList();\r\n                }}>\r\n                重置\r\n              </Button>\r\n            </Space>\r\n          </Form.Item>\r\n        </Form>\r\n        <nav style={{ marginTop: 10 }}>\r\n          <ModalCreate.Button>添加角色</ModalCreate.Button>\r\n        </nav>\r\n      </header>\r\n      <AppTable\r\n        dataSource={res.list}\r\n        columns={columns}\r\n        rowKey=\"id\"\r\n        style={{ marginTop: 10 }}\r\n        loading={loading}\r\n        pagination={{ total: res.total }}\r\n        onChange={({ current, pageSize }) => {\r\n          setPage({ current, pageSize });\r\n        }}></AppTable>\r\n      <ModalCreate.Modal\r\n        onOk={() => {\r\n          getList();\r\n        }}></ModalCreate.Modal>\r\n      <ModalUpdate.Modal\r\n        onOk={() => {\r\n          getList();\r\n        }}></ModalUpdate.Modal>\r\n    </ContentMain>\r\n  );\r\n};\r\nexport default AuthManage;\r\n"],"sourceRoot":""}