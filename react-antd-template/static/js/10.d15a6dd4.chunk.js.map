{"version":3,"sources":["console-layout/content-main.tsx","components/app-table.tsx","views/auth-manage/components/form-item-auth-tree.tsx","views/auth-manage/role-manage/hook-modal-create.tsx","views/auth-manage/role-manage/hook-modal-update.tsx","views/auth-manage/role-manage/index.tsx"],"names":["ContentMain","props","className","children","AppTable","useState","pagination","setPagination","useEffect","showQuickJumper","showTotal","String","total","FormOptionAuthTree","value","checkedKeys","onChange","routeList","useRoutes","generatorAuthTreeOptionFromRoutes","treeOption","checkable","treeData","onCheck","info","halfCheckedKeys","FormItemAuthTree","name","Item","label","layout","labelCol","span","wrapperCol","useModalCreate","isShowRef","useRef","current","setIsShow","_Button","type","onClick","Form","useForm","form","_Modal","onOk","loading","setLoading","title","visible","confirmLoading","onCancel","a","validateFields","catch","e","_form","reqRoleCreate","roleName","authTree","remark","res","code","appMessage","error","message","success","rules","required","placeholder","TextArea","maxLength","Button","Modal","useModalUpdate","activeItem","item","setFieldsValue","getFieldsValue","id","reqRoleUpdate","unmount","AuthManage","list","setRes","getList","reqRoleList","page","data","map","index","sn","getTableSN","pageSize","setPage","ModalCreate","ModalUpdate","columns","key","width","dataIndex","render","text","align","resetFields","style","marginTop","dataSource","rowKey"],"mappings":"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","file":"static/js/10.d15a6dd4.chunk.js","sourcesContent":["import React from \"react\";\r\ninterface Props {\r\n  [key: string]: any;\r\n}\r\n/**主内容区 可以统一ui 并减少一层dom */\r\nconst ContentMain: React.FC<ViewProps<Props>> = (props) => {\r\n  const { className = \"\" } = props;\r\n  //render\r\n  return <main className={`content-main ${className}`}>{props.children}</main>;\r\n};\r\nexport default ContentMain;\r\n","import { Table } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\ninterface Props extends Antd.TableProps<any> {\r\n  [key: string]: any;\r\n}\r\nconst AppTable: React.FC<ViewProps<Props>> = (props) => {\r\n  const [pagination, setPagination] = useState<false | Antd.TablePaginationConfig | undefined>();\r\n  useEffect(() => {\r\n    if (!props.pagination) return;\r\n    setPagination({\r\n      ...props.pagination,\r\n      showQuickJumper: true,\r\n      showTotal: () => props.pagination && `共 ${String(props.pagination.total || 0)} 条`,\r\n    });\r\n  }, [props.pagination]);\r\n  //render\r\n  return <Table {...props} pagination={pagination}></Table>;\r\n};\r\nexport default AppTable;\r\n","import React, { useState } from \"react\";\r\nimport { Tree, Form, FormProps } from \"antd\";\r\nimport { useRoutes } from \"@/router\";\r\nimport { generatorAuthTreeOptionFromRoutes } from \"@/model/auth-tree\";\r\n\r\ninterface FormOptionAuthTreeProps {\r\n  [key: string]: any;\r\n  value?: Antd.TreeCheckedKeys;\r\n  onChange?: (value: Antd.TreeCheckedKeys) => void;\r\n}\r\nconst FormOptionAuthTree: React.FC<ViewProps<FormOptionAuthTreeProps>> = (props) => {\r\n  const { className = \"\", value = { checkedKeys: [] }, onChange } = props;\r\n  const { routeList } = useRoutes();\r\n  const [treeOption] = useState(generatorAuthTreeOptionFromRoutes(routeList)); //不会每次只需\r\n\r\n  return (\r\n    <Tree\r\n      checkedKeys={value.checkedKeys}\r\n      checkable\r\n      className={className}\r\n      treeData={treeOption}\r\n      //  React.Key[] antd 不兼容\r\n      onCheck={(checkedKeys: any = [], info: Antd.CheckInfo) => {\r\n        //tip 什么时候不是数组\r\n        onChange && onChange({ checkedKeys, halfCheckedKeys: info.halfCheckedKeys || [] });\r\n      }}></Tree>\r\n  );\r\n};\r\n\r\ninterface Props extends FormProps {\r\n  [key: string]: any;\r\n}\r\nconst FormItemAuthTree: React.FC<ViewProps<Props>> = (props) => {\r\n  const { className = \"\", name = \"authTree\" } = props;\r\n  //render\r\n  return (\r\n    <Form.Item className={className} name={name} label=\"权限列表\">\r\n      <FormOptionAuthTree />\r\n    </Form.Item>\r\n  );\r\n};\r\nexport default FormItemAuthTree;\r\n","import { reqRoleCreate } from \"@/apis\";\r\nimport AppInput from \"@/components/app-input\";\r\nimport { appMessage } from \"@/plugins/antd\";\r\nimport { Button, Form, Input, Modal } from \"antd\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport FormItemAuthTree from \"../components/form-item-auth-tree\";\r\n\r\ninterface ButtonProps {\r\n  [key: string]: any;\r\n}\r\ninterface ModalProps {\r\n  [key: string]: any;\r\n  onOk?: () => void;\r\n}\r\n\r\nconst layout = {\r\n  labelCol: { span: 5 },\r\n  wrapperCol: { span: 19 },\r\n};\r\n\r\nconst useModalCreate = () => {\r\n  const isShowRef = useRef(false);\r\n  const [, setIsShow] = useState(isShowRef.current);\r\n  const _Button = useRef<React.FC<ViewProps<ButtonProps>>>((props) => {\r\n    return (\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          setIsShow((isShowRef.current = !isShowRef.current)); //触发更新\r\n          // console.log(\"[]\", isShowRef.current);\r\n        }}>\r\n        {props.children}\r\n      </Button>\r\n    );\r\n  });\r\n  const [form] = Form.useForm<FormDataRoleCreate>();\r\n  const _Modal = useRef<React.FC<ViewProps<ModalProps>>>((props) => {\r\n    // props\r\n    const { onOk } = props;\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    return (\r\n      <Modal\r\n        title=\"添加角色\"\r\n        visible={isShowRef.current}\r\n        confirmLoading={loading}\r\n        onCancel={() => {\r\n          setIsShow((isShowRef.current = false));\r\n        }}\r\n        onOk={async () => {\r\n          const _form = await form.validateFields().catch((e) => e);\r\n          if (!_form || loading) return;\r\n          setLoading(true);\r\n          const res = await reqRoleCreate({\r\n            roleName: _form.roleName,\r\n            checkedKeys: _form.authTree?.checkedKeys || [],\r\n            halfCheckedKeys: _form.authTree?.halfCheckedKeys || [],\r\n            remark: _form.remark,\r\n          });\r\n          setLoading(false);\r\n          if (res.code != 200) return appMessage.error(res.message || \"添加失败！\");\r\n          appMessage.success(res.message || \"添加成功！\");\r\n          setIsShow((isShowRef.current = false));\r\n          onOk && onOk();\r\n        }}>\r\n        <Form form={form} {...layout}>\r\n          <Form.Item name=\"roleName\" label=\"角色名称\" rules={[{ required: true }]}>\r\n            <AppInput placeholder=\"请输入角色名称\" />\r\n          </Form.Item>\r\n          <Form.Item name=\"remark\" label=\"备注\">\r\n            <Input.TextArea placeholder=\"最多输入100位字符\" maxLength={100} />\r\n          </Form.Item>\r\n          <FormItemAuthTree name=\"authTree\" />\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  });\r\n  return {\r\n    Button: _Button.current,\r\n    Modal: _Modal.current,\r\n  };\r\n};\r\nexport default useModalCreate;\r\n","import { reqRoleUpdate } from \"@/apis\";\r\nimport AppInput from \"@/components/app-input\";\r\nimport { appMessage } from \"@/plugins/antd\";\r\nimport { Button, Form, Input, Modal } from \"antd\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport FormItemAuthTree from \"../components/form-item-auth-tree\";\r\n\r\ninterface ButtonProps {\r\n  [key: string]: any;\r\n  item: RoleItem;\r\n}\r\ninterface ModalProps {\r\n  onOk?: () => void;\r\n}\r\n\r\nconst layout = {\r\n  labelCol: { span: 5 },\r\n  wrapperCol: { span: 19 },\r\n};\r\n\r\nconst useModalUpdate = () => {\r\n  const isShowRef = useRef(false);\r\n  const activeItem = useRef<RoleItem>();\r\n  const [, setIsShow] = useState(isShowRef.current);\r\n  const _Button = useRef<React.FC<ViewProps<ButtonProps>>>((props) => {\r\n    return (\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          const { item } = props;\r\n          setIsShow((isShowRef.current = !isShowRef.current)); //触发更新\r\n          activeItem.current = item;\r\n          form.setFieldsValue({\r\n            roleName: item.roleName,\r\n            remark: item.remark,\r\n            authTree: {\r\n              halfCheckedKeys: item.halfCheckedKeys,\r\n              checkedKeys: item.checkedKeys,\r\n            },\r\n          });\r\n        }}>\r\n        {props.children}\r\n      </Button>\r\n    );\r\n  });\r\n  const [form] = Form.useForm<FormDataRoleCreate>();\r\n\r\n  const _Modal = useRef<React.FC<ViewProps<ModalProps>>>((props) => {\r\n    const { onOk } = props;\r\n    // eslint-disable-next-line react-hooks/rules-of-hooks\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    return (\r\n      <Modal\r\n        title=\"编辑角色\"\r\n        visible={isShowRef.current}\r\n        confirmLoading={loading}\r\n        onCancel={() => {\r\n          setIsShow((isShowRef.current = false));\r\n        }}\r\n        onOk={async () => {\r\n          const _form = form.getFieldsValue();\r\n          if (!_form || loading || !activeItem.current?.id) return;\r\n          setLoading(true);\r\n          const res = await reqRoleUpdate({\r\n            id: activeItem.current.id,\r\n            roleName: _form.roleName,\r\n            checkedKeys: _form.authTree?.checkedKeys || [],\r\n            halfCheckedKeys: _form.authTree?.halfCheckedKeys || [],\r\n            remark: _form.remark,\r\n          });\r\n          setLoading(false);\r\n          if (res.code != 200) return appMessage.error(res.message || \"更新失败！\");\r\n          appMessage.success(res.message || \"更新成功！\");\r\n          setIsShow((isShowRef.current = false));\r\n          onOk && onOk();\r\n        }}>\r\n        <Form form={form} {...layout}>\r\n          <Form.Item name=\"roleName\" label=\"角色名称\" rules={[{ required: true }]}>\r\n            <AppInput placeholder=\"请输入角色名称\" />\r\n          </Form.Item>\r\n          <Form.Item name=\"remark\" label=\"备注\">\r\n            <Input.TextArea placeholder=\"最多输入100位字符\" maxLength={100} />\r\n          </Form.Item>\r\n          <FormItemAuthTree name=\"authTree\" />\r\n        </Form>\r\n      </Modal>\r\n    );\r\n  });\r\n  return {\r\n    Button: _Button.current,\r\n    Modal: _Modal.current,\r\n  };\r\n};\r\nexport default useModalUpdate;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button, Form, Space } from \"antd\";\r\nimport AppInput from \"@/components/app-input\";\r\nimport useModalCreate from \"./hook-modal-create\";\r\nimport ContentMain from \"@/console-layout/content-main\";\r\nimport { reqRoleList } from \"@/apis\";\r\nimport { appMessage } from \"@/plugins/antd\";\r\nimport useModalUpdate from \"./hook-modal-update\";\r\nimport AppTable from \"@/components/app-table\";\r\nimport { getTableSN } from \"@/utils\";\r\ninterface Props {\r\n  [key: string]: any;\r\n}\r\nlet unmount = false;\r\nconst AuthManage: React.FC<ViewProps<Props>> = (props) => {\r\n  useEffect(() => {\r\n    unmount = false;\r\n    return () => {\r\n      unmount = true;\r\n    };\r\n  }, []);\r\n  const { className = \"\" } = props;\r\n  //1.res\r\n  const [res, setRes] = useState({\r\n    list: [] as RoleItem[],\r\n    total: 0,\r\n  });\r\n  const [loading, setLoading] = useState(false);\r\n  const getList = async () => {\r\n    const _form = await form.validateFields().catch(() => undefined);\r\n    if (loading || !_form) return;\r\n    setLoading(true);\r\n    const res = await reqRoleList({ ...page, ..._form });\r\n    if (unmount) return;\r\n    setLoading(false);\r\n    if (res.code != 200) return appMessage.error(res.message || \"加载数据失败！\");\r\n    // appMessage.success(res.message || \"加载数据成功！\");//列表一般不提示\r\n    res.data.list = res.data.list.map((item, index) => ({ ...item, sn: getTableSN(page, index) }));\r\n    setRes({ list: res.data.list, total: res.data.total });\r\n  };\r\n  //2.page\r\n  const [page, setPage] = useState<ReqPageData>({ current: 1, pageSize: 10 });\r\n  useEffect(() => {\r\n    getList();\r\n  }, [page]);\r\n  //3.form\r\n  const [form] = Form.useForm<FormDataAuthManageList>();\r\n  const ModalCreate = useModalCreate();\r\n  const ModalUpdate = useModalUpdate();\r\n\r\n  let columns: Antd.TableColumnsType<RoleItem> = [\r\n    { key: \"sn\", title: \"序号\", width: 100 },\r\n    { key: \"roleName\", title: \"角色名称\" },\r\n    { key: \"remark\", title: \"备注\" },\r\n    {\r\n      key: \"actions\",\r\n      dataIndex: \"actions\",\r\n      title: \"操作\",\r\n      width: 300,\r\n      render(text, item) {\r\n        //\r\n        return (\r\n          <Space>\r\n            <ModalUpdate.Button item={item}>编辑</ModalUpdate.Button>\r\n          </Space>\r\n        );\r\n      },\r\n    },\r\n  ];\r\n  columns = columns.map((item) => ({ ...item, align: \"center\", dataIndex: item.key }));\r\n  //render\r\n  return (\r\n    <ContentMain className={className}>\r\n      <header>\r\n        <Form layout=\"inline\" form={form}>\r\n          <Form.Item label=\"角色名称\" name=\"roleName\">\r\n            <AppInput placeholder=\"请输入角色名称\" />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Space>\r\n              <Button\r\n                type=\"primary\"\r\n                onClick={() => {\r\n                  if (page.current == 1) return getList();\r\n                  setPage({ ...page, current: 1 });\r\n                }}>\r\n                查询\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  form.resetFields();\r\n                  getList();\r\n                }}>\r\n                重置\r\n              </Button>\r\n            </Space>\r\n          </Form.Item>\r\n        </Form>\r\n        <nav style={{ marginTop: 10 }}>\r\n          <ModalCreate.Button>添加角色</ModalCreate.Button>\r\n        </nav>\r\n      </header>\r\n\r\n      <AppTable\r\n        dataSource={res.list}\r\n        columns={columns}\r\n        rowKey=\"id\"\r\n        style={{ marginTop: 10 }}\r\n        loading={loading}\r\n        pagination={{ total: res.total }}\r\n        onChange={({ current, pageSize }) => {\r\n          setPage({ current, pageSize });\r\n        }}></AppTable>\r\n      <ModalCreate.Modal\r\n        onOk={() => {\r\n          getList();\r\n        }}></ModalCreate.Modal>\r\n      <ModalUpdate.Modal\r\n        onOk={() => {\r\n          getList();\r\n        }}></ModalUpdate.Modal>\r\n    </ContentMain>\r\n  );\r\n};\r\nexport default AuthManage;\r\n"],"sourceRoot":""}