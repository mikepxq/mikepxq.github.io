{"version":3,"sources":["model/config.ts","store/index.ts","apis/error.ts","apis/request.ts","apis/index.ts","components/app-input.tsx","components/lazy-spin.tsx","model/index.ts","model/auth-tree.ts","model/article.ts","components/init-loading.tsx","views/App.tsx","reportWebVitals.ts","index.tsx","components/app-input-password.tsx","views/login/index.tsx","views/page404.tsx","router/router-before.tsx","router/router-view.tsx","router/hooks.tsx","console-layout/aside.tsx","console-layout/header/tag-nav.tsx","console-layout/header/breadcrumb.tsx","console-layout/header/user-dropdown-menu.tsx","console-layout/header/index.tsx","console-layout/index.tsx","router/index.tsx","router/utils.ts","store/user/index.ts","plugins/antd.tsx","store-hooks/index.ts","store/console-layout/index.ts","utils/index.ts"],"names":["MockApiSleepTime","appReducers","combineReducers","user","consoleLayout","store","configureStore","reducer","state","action","type","undefined","errorMap","res","appMessage","error","message","ErrorMiddleware","Object","keys","includes","String","code","axiosInstance","axios","create","baseURL","timeout","interceptors","request","use","config","token","localStorage","getItem","response","a","patternMap","mockApi","test","url","sleep","data","err","console","log","requestPost","method","reqRoleOptionList","params","reqUserInfo","reqLogin","reqRoleList","reqRoleCreate","reqRoleUpdate","reqUserCreate","reqUserList","reqUserUpdate","reqArticleCreate","reqArticleUpdate","reqArticleList","reqArticleInfo","AppInput","props","className","onChange","autoComplete","name","tabIndex","style","position","top","e","target","value","trim","LazySpin","size","alpha_number_","appVersion","generatorAuthTreeOptionFromRoutes","routes","parent","filter","route","isAuth","map","_map","key","path","title","children","articleInitialValue","InitLoading","useState","isLazyEnd","setIsLazyEnd","useEffect","document","getElementById","classList","remove","Nprogress","start","done","add","ReactDOM","createPortal","body","App","routeList","useRoutes","isInitEnd","setIsInitEnd","useUser","fetchUserInfo","useUserDispatch","init","id","fallback","history","RouterHistory","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","MockEnter","mockEnd","setMockEnd","render","locale","zhCN","process","REACT_APP_MOCK","AppInputPassword","Password","testDataList","username","password","Login","Form","useForm","form","setFieldsValue","loading","setLoading","fetchLogin","useHistory","onSubmit","validateFields","catch","_form","appNotification","success","push","Item","rules","required","prefix","UserOutlined","placeholder","LockOutlined","display","width","onClick","item","index","Page404","RouteBefore","to","authList","is404","useIs404","NProgress","replace","redirect","component","RouterView","exact","getRouteTreeList","routeTreeList","forEach","breadCrumbRoutes","concat","RouteView","isHidden","getRoutesMap","initRoutes","list","cloneDeep","RoutesContext","React","createContext","SetRoutesContext","useContext","useRoutesAction","routeMap","location","pathname","useCurrentRoute","useLocation","currentRoute","Sider","Layout","Aside","collapsed","openKeysMap","setOpenKeysMap","selectedKeyList","setSelectedKeyList","_pathList","openKeyList","setOpenKeyList","getKeyListValueTrueInMap","trigger","collapsible","theme","mode","openKeys","selectedKeys","getSideMenu","SubMenu","icon","UploadOutlined","onTitleClick","memo","TagNav","visitedList","useConsoleLayout","setVisitedMap","useActionsConsoleLayout","goBack","LeftOutlined","closable","onClose","preventDefault","isDelete","length","TopNavBreadcrumb","setBreadCrumbRoutes","isLinkBreadCrumb","onclick","dispatch","clear","UserDropdownMenu","_Menu","overlay","DownOutlined","ContainerHeader","onChangeCollapsed","MenuFoldOutlined","ConsoleLayout","setCollapsed","Content","v","syncRoutes","lazy","defaultRoute","asyncRoutes","Provider","routeOptionList","_setRoutes","_setRouteMap","setRoutes","createProvider","createBrowserHistory","filterRouteList","initialState","slice","createSlice","reducers","setUserInfo","payload","useSelector","actions","useAppDispatch","resetRoutes","userInfo","authRoutes","roleName","generatorAuthRouteList","setItem","messageFn","option","destroy","notificationFn","notification","content","warn","info","useReduxDispatch","useReduxSelector","visitedMap","_setVisitedMap","_removeVisitedRoute","k","time","Promise","resolve","setTimeout","removeFirstLineOfTemplateString","str","getTableSN","page","Number","current","pageSize","entries"],"mappings":"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","file":"static/js/main.8c629030.chunk.js","sourcesContent":["/** mock api 睡眠时间 */\r\nexport const MockApiSleepTime = 0.5;\r\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport user from \"./user\";\r\nimport consoleLayout from \"./console-layout\";\r\n\r\n//\r\nconst appReducers = combineReducers({\r\n  user,\r\n  consoleLayout,\r\n});\r\n\r\nconst rootReducers = (state: any, action: any) => {\r\n  if (action.type == \"RESET_STORE\") {\r\n    state = undefined; //使用默认初始值\r\n  }\r\n  return appReducers(state, action);\r\n};\r\n\r\n//\r\nexport const store = configureStore({\r\n  reducer: rootReducers,\r\n});\r\n\r\nexport default store;\r\n","import { appMessage } from \"@/plugins/antd\";\r\n\r\nconst loginFn = (res: ApiRes) => {\r\n  appMessage.error(res.message || \"用户失效，请重新登录！\");\r\n};\r\ntype ErrorFn = (res: ApiRes) => void;\r\nconst errorMap: Record<string, ErrorFn> = {\r\n  400: loginFn,\r\n};\r\nexport const ErrorMiddleware = (res: ApiRes) => {\r\n  const isError = Object.keys(errorMap).includes(String(res.code));\r\n  if (isError) {\r\n    errorMap[res.code](res);\r\n  }\r\n  return res;\r\n};\r\n\r\nexport default {};\r\n","import { patternMap } from \"@/model\";\r\nimport { MockApiSleepTime } from \"@/model/config\";\r\nimport { sleep } from \"@/utils\";\r\nimport axios from \"axios\";\r\nimport { ErrorMiddleware } from \"./error\";\r\nconst axiosInstance = axios.create({\r\n  baseURL: \"\",\r\n  timeout: 10000,\r\n  // headers:{}\r\n});\r\n/**请求拦截 */\r\naxiosInstance.interceptors.request.use(\r\n  (config) => {\r\n    /** */\r\n    return { ...config, token: localStorage.getItem(\"token\") || \"\" };\r\n  }\r\n  // (err) => {}\r\n);\r\n/**响应拦截 */\r\naxiosInstance.interceptors.response.use(\r\n  async (res) => {\r\n    // console.log(\"[res]\", res);\r\n    if (patternMap.mockApi.test(res.config.url || \"\")) {\r\n      await sleep(MockApiSleepTime); //模拟加载时间\r\n      // console.log(`[${res.config.url}]`, \"[res.data]\", res.data);\r\n    }\r\n    //减少一层级\r\n    return ErrorMiddleware(res.data as ApiRes) as any; //取消axios的检查\r\n  },\r\n  (err) => {\r\n    console.log(\"err :>> \", err);\r\n    /**\r\n     * 全局用 code 判断交互\r\n     * 就不用 Promise.catch()去捕获错误，因为当错误时，不捕获，不会执行接着的程序。\r\n     * 比如：refForm.value.validate().catch(() => {});\r\n     */\r\n    return ErrorMiddleware({\r\n      code: 7000,\r\n      message: \"网络错误\",\r\n      data: undefined,\r\n    });\r\n  }\r\n);\r\n/**get 方式请求 */\r\nexport const requestGet = (url: string, data?: ApiData): Promise<ApiRes> => {\r\n  return axiosInstance({\r\n    url,\r\n    method: \"get\",\r\n    params: data,\r\n  }) as unknown as Promise<ApiRes>;\r\n};\r\nexport const requestPost = (url: string, data?: ApiData): Promise<ApiRes> => {\r\n  return axiosInstance({\r\n    url,\r\n    method: \"post\",\r\n    data,\r\n  }) as unknown as Promise<ApiRes>;\r\n};\r\n\r\n/**参照：\r\n * https://www.kancloud.cn/yunye/axios/234845\r\n */\r\n","// eslint-disable-next-line @typescript-eslint/no-unused-vars\r\nimport { requestGet, requestPost } from \"./request\";\r\n/************************************ 全局 ********************************************** */\r\n/** 获取角色选项列表 */\r\nexport const reqRoleOptionList: ApiFn<null, OptionItem[]> = () => requestGet(\"/mock/api/role/option-list\");\r\n/************************************ 全局 end ********************************************** */\r\n/************************************ 用户操作 ********************************************** */\r\n/**获取用户信息 */\r\nexport const reqUserInfo: ApiFn<ReqDataUserInfo, ResDataUserInfo> = (data) => requestPost(\"/mock/api/user/info\", data);\r\n/**用户登录 */\r\nexport const reqLogin: ApiFn<ReqDataLogin, ResDataLogin> = (data) => requestPost(\"/mock/api/user/login\", data);\r\n/************************************ 用户操作 end********************************************** */\r\n\r\n/************************************ 权限管理 ********************************************** */\r\n/** 获取角色列表 */\r\nexport const reqRoleList: ApiFn<ReqDataRoleList, ResDataRoleList> = (data) => requestPost(\"/mock/api/role/list\", data);\r\n/** 新增角色 */\r\nexport const reqRoleCreate: ApiFn<ReqDataRoleCreate> = (data) => requestPost(\"/mock/api/role/create\", data);\r\n/** 更新角色 */\r\nexport const reqRoleUpdate: ApiFn<ReqDataRoleUpdate> = (data) => requestPost(\"/mock/api/role/update\", data);\r\n/** 新增用户 */\r\nexport const reqUserCreate: ApiFn<ReqDataUserCreate> = (data) => requestPost(\"/mock/api/user/create\", data);\r\n/** 获取用户列表 */\r\nexport const reqUserList: ApiFn<ReqDataUserList, ResDataUserList> = (data) => requestPost(\"/mock/api/user/list\", data);\r\n/** 更新用户 */\r\nexport const reqUserUpdate: ApiFn<ReqDataUserUpdate> = (data) => requestPost(\"/mock/api/user/update\", data);\r\n/************************************ 权限管理 end********************************************** */\r\n/************************************ 文章管理 ********************************************** */\r\n/** 新建文章 */\r\nexport const reqArticleCreate: ApiFn<ReqDataArticleCreate, ResDataArticleCreate> = (data) =>\r\n  requestPost(\"/mock/api/article/create\", data);\r\n/** 更新文章 */\r\nexport const reqArticleUpdate: ApiFn<ReqDataArticleUpdate> = (data) => requestPost(\"/mock/api/article/update\", data);\r\n\r\n/** 获取文章列表 */\r\nexport const reqArticleList: ApiFn<ReqDataArticleList, ResDataArticleList> = (data) =>\r\n  requestPost(\"/mock/api/article/list\", data);\r\n/** 获取文章详细信息 */\r\nexport const reqArticleInfo: ApiFn<ReqDataArticleInfo, ResDataArticleInfo> = (data) =>\r\n  requestPost(\"/mock/api/article/info\", data);\r\n/************************************ 文章管理 end********************************************** */\r\n","import { Input, InputProps } from \"antd\";\r\nimport React from \"react\";\r\ninterface Props extends InputProps {\r\n  autoComplete?: \"off\"; //其他再添加\r\n  name?: string; //其他再添加\r\n}\r\n/** 默认去除前后空格 */\r\nconst AppInput: React.FC<ViewProps<Props>> = (props) => {\r\n  const { className = \"\", onChange, autoComplete, name } = props;\r\n  //render\r\n  return (\r\n    <>\r\n      {/* 阻拦浏览器回显 */}\r\n      {autoComplete == \"off\" && <input tabIndex={-1} name={name} style={{ position: \"fixed\", top: -100 }} />}\r\n      <Input\r\n        {...props}\r\n        className={className}\r\n        onChange={(e) => {\r\n          e.target.value = e.target.value.trim();\r\n          onChange && onChange(e);\r\n        }}></Input>\r\n    </>\r\n  );\r\n};\r\nexport default AppInput;\r\n","import { Spin } from \"antd\";\r\nimport React from \"react\";\r\ninterface Props {\r\n  [key: string]: any;\r\n}\r\nconst LazySpin: React.FC<ViewProps<Props>> = (props) => {\r\n  const { className = \"\" } = props;\r\n  //render\r\n  return <Spin size=\"large\" className={`position-center ${className}`}></Spin>;\r\n};\r\nexport default LazySpin;\r\n","/**封装处理元素数据 包括静态变量 */\r\nexport * from \"./auth-tree\";\r\nexport * from \"./config\";\r\nexport * from \"./article\";\r\n\r\n/**全局正则 */\r\nexport const patternMap = {\r\n  /** mock接口 */\r\n  mockApi: /^\\/mock/,\r\n  /** 单字节中文 字母 数字 下划线  多用于名称*/\r\n  alpha_number_: /^[\\u4e00-\\u9fa5a-zA-Z0-9_]$/,\r\n  appVersion: /^(\\d+\\.)+\\d+$/,\r\n};\r\n","type AuthTreeItem = {\r\n  key: string;\r\n  title?: string;\r\n  children?: AuthTreeItem[];\r\n  isAuth?: boolean; //挂载 透传父类权限\r\n};\r\n/** 通过路由生成权限选项 */\r\nexport const generatorAuthTreeOptionFromRoutes = (routes: RouteItem[], parent = {} as AuthTreeItem) => {\r\n  return routes\r\n    .filter((route) => (route.isAuth === undefined ? parent.isAuth : route.isAuth))\r\n    .map((route) => {\r\n      const _map = {\r\n        isAuth: route.isAuth === undefined ? parent.isAuth : route.isAuth, //透传父类权限 ，如果有设置用自己的\r\n        key: route.path,\r\n        title: route.title || route.name || \"\",\r\n      } as AuthTreeItem;\r\n      if (route.children) {\r\n        _map.children = generatorAuthTreeOptionFromRoutes(route.children, _map);\r\n      }\r\n      return _map;\r\n    });\r\n};\r\n","export const articleInitialValue = `![image](https://uicdn.toast.com/toastui/img/tui-editor-bi.png)\r\n\r\n# Awesome Editor!\r\n\r\nIt has been _released as opensource in 2018_ and has ~~continually~~ evolved to **receive 10k GitHub ⭐️ Stars**.\r\n\r\n## Create Instance\r\n\r\nYou can create an instance with the following code and use \\`getHtml()\\` and \\`getMarkdown()\\` of the [Editor](https://github.com/nhn/tui.editor).\r\n\r\n\\`\\`\\`js\r\nconst editor = new Editor(options);\r\n\\`\\`\\`\r\n\r\n> See the table below for default options\r\n> > More API information can be found in the document\r\n\r\n| name | type | description |\r\n| --- | --- | --- |\r\n| el | \\`HTMLElement\\` | container element |\r\n\r\n## Features\r\n\r\n* CommonMark + GFM Specifications\r\n   * Live Preview\r\n   * Scroll Sync\r\n   * Auto Indent\r\n   * Syntax Highlight\r\n        1. Markdown\r\n        2. Preview\r\n\r\n## Support Wrappers\r\n\r\n> * Wrappers\r\n>    1. [x] React\r\n>    2. [x] Vue\r\n>    3. [ ] Ember`;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Nprogress from \"nprogress\";\r\nimport ReactDOM from \"react-dom\";\r\ninterface Props {\r\n  onStart?: () => void;\r\n  onDone?: () => void;\r\n}\r\nconst InitLoading: React.FC<ViewProps<Props>> = () => {\r\n  const [isLazyEnd, setIsLazyEnd] = useState(true); //默认同步\r\n  useEffect(() => {\r\n    if (isLazyEnd) return;\r\n    //https://zh-hans.reactjs.org/docs/hooks-reference.html#timing-of-effects\r\n    //isInitEnd 之后处理\r\n    document.getElementById(\"init\")?.classList.remove(\"initEnd\");\r\n  }, [isLazyEnd]);\r\n  useEffect(() => {\r\n    Nprogress.start();\r\n    setIsLazyEnd(false);\r\n    return () => {\r\n      Nprogress.done();\r\n      document.getElementById(\"init\")?.classList.add(\"initEnd\");\r\n    };\r\n  }, []);\r\n  //render\r\n  return ReactDOM.createPortal(\r\n    <div className=\"init\">\r\n      <div className=\"content\">\r\n        <h1>系统准备中……</h1>\r\n        <p>mock api 睡眠时间 1.5s</p>\r\n      </div>\r\n    </div>,\r\n    document.body\r\n  );\r\n};\r\nexport default InitLoading;\r\n","import React, { Suspense, useEffect, useState } from \"react\";\r\nimport { RouterView, useRoutes } from \"@/router\";\r\nimport { Router } from \"react-router-dom\";\r\nimport { useUser, useUserDispatch } from \"@/store/user\";\r\nimport InitLoading from \"@/components/init-loading\";\r\nimport { RouterHistory } from \"@/router\";\r\n// 权限 动态路由\r\nconst App: React.FC = () => {\r\n  const { routeList } = useRoutes();\r\n  // console.log(\"[routes]\", routeList);\r\n  const [isInitEnd, setIsInitEnd] = useState(false);\r\n  const user = useUser();\r\n  const { fetchUserInfo } = useUserDispatch();\r\n  /**初始数据 */\r\n  const init = async () => {\r\n    //0. 暂不处理没登录的\r\n    if (!user.token) return setIsInitEnd(true);\r\n    //1. 获取用户信息（动态权限） 生成路由\r\n    await fetchUserInfo({ id: user.id });\r\n    //同步取消屏保\r\n    setIsInitEnd(true);\r\n  };\r\n  //初始\r\n  useEffect(() => {\r\n    init();\r\n  }, []);\r\n  useEffect(() => {\r\n    if (!isInitEnd) return;\r\n    document.getElementById(\"init\")?.classList.add(\"initEnd\");\r\n  }, [isInitEnd]);\r\n\r\n  return (\r\n    <>\r\n      {/* 路由初始完 避免异步动态路由直接404 */}\r\n      {isInitEnd && (\r\n        <Suspense fallback={<InitLoading />}>\r\n          <Router history={RouterHistory}>\r\n            <RouterView routes={routeList} className=\"m-page\" />\r\n          </Router>\r\n        </Suspense>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default App;\r\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\r\nimport { ReportHandler } from \"web-vitals\";\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"@/styles/index.less\";\r\nimport App from \"./views/App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport * as ReactRedux from \"react-redux\";\r\nimport store from \"./store\";\r\nimport * as Routes from \"@/router/index\";\r\nimport { ConfigProvider } from \"antd\";\r\nimport zhCN from \"antd/lib/locale/zh_CN\";\r\n\r\n/**模拟直接访问，获取初始全局数据 */\r\nconst MockEnter: React.FC = () => {\r\n  const [mockEnd, setMockEnd] = useState(false);\r\n  useEffect(() => {\r\n    import(\"./mock\").then(() => setMockEnd(true));\r\n  }, []);\r\n  return <>{mockEnd && <App />}</>;\r\n};\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n  <ConfigProvider locale={zhCN}>\r\n    <ReactRedux.Provider store={store}>\r\n      <Routes.Provider>{process.env.REACT_APP_MOCK === \"true\" ? <MockEnter /> : <App />}</Routes.Provider>\r\n    </ReactRedux.Provider>\r\n  </ConfigProvider>,\r\n  // </React.StrictMode>\r\n  document.getElementById(\"app\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","import { Input, InputProps } from \"antd\";\r\nimport React from \"react\";\r\ninterface Props extends InputProps {\r\n  autoComplete?: \"off\"; //其他再添加\r\n  name?: string; //其他再添加\r\n}\r\n/** 默认去除前后空格 */\r\nconst AppInputPassword: React.FC<ViewProps<Props>> = (props) => {\r\n  const { className = \"\", autoComplete, name, onChange } = props;\r\n  //render\r\n  return (\r\n    <>\r\n      {/* 阻拦浏览器回显 */}\r\n      {autoComplete == \"off\" && (\r\n        <input\r\n          tabIndex={-1}\r\n          type=\"password\"\r\n          autoComplete={autoComplete}\r\n          name={name}\r\n          style={{ position: \"fixed\", top: -100 }}\r\n        />\r\n      )}\r\n      <Input.Password\r\n        {...props}\r\n        className={className}\r\n        onChange={(e) => {\r\n          e.target.value = e.target.value.trim();\r\n          onChange && onChange(e);\r\n        }}></Input.Password>\r\n    </>\r\n  );\r\n};\r\nexport default AppInputPassword;\r\n","import AppInput from \"@/components/app-input\";\r\nimport AppInputPassword from \"@/components/app-input-password\";\r\nimport { appMessage, appNotification } from \"@/plugins/antd\";\r\nimport { useUserDispatch } from \"@/store/user\";\r\nimport { LockOutlined, UserOutlined } from \"@ant-design/icons\";\r\nimport { Button, Form, Space } from \"antd\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./index.less\";\r\nconst testDataList = [\r\n  { username: \"superAdmin\", password: \"superAdmin\" },\r\n  { username: \"common\", password: \"common\" },\r\n];\r\nconst Login: React.FC<ViewProps> = (props) => {\r\n  const { className } = props;\r\n  const [form] = Form.useForm<ReqDataLogin>();\r\n  useEffect(() => {\r\n    form.setFieldsValue({ username: testDataList[0].username, password: testDataList[0].password });\r\n  }, []);\r\n  const [loading, setLoading] = useState(false);\r\n  const { fetchLogin } = useUserDispatch();\r\n  const history = useHistory();\r\n  const onSubmit = async () => {\r\n    const _form = await form.validateFields().catch(() => undefined);\r\n    if (!_form) return;\r\n    if (loading) return;\r\n    setLoading(true);\r\n    const res = await fetchLogin(_form);\r\n    setLoading(false);\r\n    if (res.code != 200) return appMessage.error(res.message || \"登录失败\");\r\n    appNotification.success({ message: \"登录成功\" });\r\n    history.push(\"/\");\r\n  };\r\n  //render\r\n  return (\r\n    <div className={`${className} login-page`}>\r\n      <div className=\"form-wrap\">\r\n        <h1>用户登录</h1>\r\n        <Form className=\"form\" form={form}>\r\n          <Form.Item name=\"username\" rules={[{ required: true, message: \"请输入用户名\" }]}>\r\n            <AppInput name=\"username\" autoComplete=\"off\" prefix={<UserOutlined />} placeholder=\"请输入用户名\" />\r\n          </Form.Item>\r\n          <Form.Item name=\"password\" rules={[{ required: true, message: \"请输入密码\" }]}>\r\n            <AppInputPassword name=\"password\" autoComplete=\"off\" prefix={<LockOutlined />} placeholder=\"请输入密码\" />\r\n          </Form.Item>\r\n          <Form.Item>\r\n            <Button loading={loading} type=\"primary\" style={{ display: \"block\", width: \"100%\" }} onClick={onSubmit}>\r\n              提交\r\n            </Button>\r\n          </Form.Item>\r\n        </Form>\r\n        <footer>\r\n          <p>测试用户数据</p>\r\n          <Space>\r\n            {testDataList.map((item, index) => (\r\n              <Button\r\n                key={`${item.password}-${index}`}\r\n                onClick={() => {\r\n                  form.setFieldsValue({\r\n                    username: item.username,\r\n                    password: item.password,\r\n                  });\r\n                }}>\r\n                {item.username}\r\n              </Button>\r\n            ))}\r\n          </Space>\r\n        </footer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Login;\r\n","import React from \"react\";\r\n// interface Props {}\r\nconst Page404: React.FC<ViewProps> = () => {\r\n  //const {  } = props\r\n  //render\r\n  return <div>Page404</div>;\r\n};\r\nexport default Page404;\r\n","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useIs404 } from \"./hooks\";\r\nimport { useUser } from \"@/store/user\";\r\nimport NProgress from \"nprogress\";\r\n\r\ninterface Props {\r\n  to: RouteItem;\r\n}\r\n\r\nconst RouteBefore: React.FC<ViewProps<Props>> = (props) => {\r\n  const { to } = props;\r\n  const history = useHistory();\r\n  const { authList } = useUser();\r\n  const { is404 } = useIs404();\r\n  /**\r\n   * 路由2中异常情况\r\n   * 1.404 登录 或 未登录\r\n   * 2.重定向路由\r\n   */\r\n  useEffect(() => {\r\n    // console.log(\"[to]\", to);\r\n    NProgress.start();\r\n    //1.404\r\n    if (is404) {\r\n      NProgress.done();\r\n      if (!authList) return history.replace(\"/login\"); //1.1未登录\r\n      return history.replace(\"/404\"); //1.1未登录\r\n    }\r\n    //2.如果有重定向路由\r\n    if (to.redirect) {\r\n      NProgress.done();\r\n      return history.replace(to.redirect);\r\n    }\r\n\r\n    NProgress.done();\r\n  }, [to.path]);\r\n  //404 防止渲染节点路由\r\n  if (!to.component || is404) return <></>;\r\n\r\n  //render\r\n  return <to.component {...props} />;\r\n};\r\nexport default RouteBefore;\r\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport RouteBefore from \"./router-before\";\r\ninterface Props {\r\n  routes?: RouteItem[];\r\n  to?: RouteItem;\r\n  className?: string;\r\n}\r\nconst RouterView: React.FC<Props> = (props) => {\r\n  let { routes } = props;\r\n  //兼容语法 两者传一\r\n  routes = routes || props.to?.children || [];\r\n  //render\r\n  return (\r\n    <Switch>\r\n      {routes.map((route, index) => (\r\n        <Route\r\n          path={route.path}\r\n          exact={route.exact}\r\n          key={`route-${index}`}\r\n          // bug 能出来，但是报错 嵌套404有问题\r\n          render={() => <RouteBefore to={route} className={props.className} />}></Route>\r\n      ))}\r\n    </Switch>\r\n  );\r\n};\r\nexport default RouterView;\r\n","import { cloneDeep } from \"lodash\";\r\nimport React, { useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport RouteView from \"./router-view\";\r\n\r\n/**\r\n * 重构路由\r\n * @param routeList 元素路由数据 修改元数据\r\n * @param parent 给子路由绑定父类\r\n * @returns\r\n */\r\n/**\r\n * 重构路由\r\n * @param routeList  元素路由数据 修改元数据\r\n * @param routeTreeList 保存路由树状结构\r\n * @param parent 给子路由绑定父类\r\n * @returns\r\n */\r\nconst getRouteTreeList = (routeList: RouteItem[], routeTreeList: RouteItem[] = [], parent?: RouteItem) => {\r\n  //\r\n  routeList.forEach((route) => {\r\n    route.breadCrumbRoutes = [route]; //1 添加当前路由 到 面包屑路由列表\r\n    route.exact = true; //默认严格匹配\r\n    if (parent) {\r\n      route.parent = parent; //2.给子路由绑定父类\r\n      route.breadCrumbRoutes = parent.breadCrumbRoutes?.concat(route.breadCrumbRoutes); //2.1追加父面包屑到子路由面包屑\r\n    }\r\n    if (route.children) {\r\n      route.component = route.component || RouteView; //如果没有组件就透传\r\n      //4.获得重构后的子路由\r\n      route.children = getRouteTreeList(route.children, [], route);\r\n      routeTreeList.push(route); //5.添加到要返回的变量中\r\n      return routeTreeList.push({\r\n        ...route,\r\n        exact: false,\r\n        isHidden: true,\r\n        redirect: undefined,\r\n        isAuth: false,\r\n        path: `${route.path}/:content`,\r\n        name: `${route.name}-content`,\r\n      });\r\n    }\r\n    routeTreeList.push(route); //5.添加到要返回的变量中\r\n  });\r\n  return routeTreeList;\r\n};\r\n/**\r\n * 路由映射\r\n * @param routeList\r\n * @param map\r\n * @returns\r\n */\r\nconst getRoutesMap = (routeList: RouteItem[], map: Record<string, RouteItem> = {}) => {\r\n  routeList.forEach((route) => {\r\n    if (route.children) {\r\n      getRoutesMap(route.children, map);\r\n    }\r\n    map[route.path] = route;\r\n  });\r\n  return map;\r\n};\r\nconst initRoutes = (routeList: RouteItem[]) => {\r\n  const list = getRouteTreeList(cloneDeep(routeList));\r\n  const map = getRoutesMap(list);\r\n  return {\r\n    list,\r\n    map,\r\n  };\r\n};\r\n/*******************************外部使用********************************************** */\r\n//1.上下文\r\nconst RoutesContext = React.createContext({});\r\nconst SetRoutesContext = React.createContext({});\r\n\r\nexport const createProvider = (routeOptionList: RouteItem[] = []) => {\r\n  //2.上下文挂值\r\n  const Provider: React.FC = (props) => {\r\n    const { list, map } = initRoutes(routeOptionList);\r\n\r\n    const [routeList, _setRoutes] = useState<RouteItem[]>(list);\r\n    const [routeMap, _setRouteMap] = useState<Record<string, RouteItem>>(map);\r\n    const setRoutes = (routeList: RouteItem[]) => {\r\n      const { list, map } = initRoutes(routeList);\r\n      _setRoutes(list);\r\n      _setRouteMap(map);\r\n    };\r\n\r\n    return (\r\n      <RoutesContext.Provider value={{ routeList, routeMap }}>\r\n        <SetRoutesContext.Provider value={{ setRoutes }}>{props.children}</SetRoutesContext.Provider>\r\n      </RoutesContext.Provider>\r\n    );\r\n  };\r\n  return Provider;\r\n};\r\n//3.上下文取值\r\ntype TypeUseRoutes = { routeList: RouteItem[]; routeMap: Record<string, RouteItem> };\r\n/** 获得重构后的路由 */\r\nexport const useRoutes = (): TypeUseRoutes => {\r\n  return React.useContext(RoutesContext) as TypeUseRoutes;\r\n};\r\ntype UseRoutesAction = { setRoutes: (routeList: RouteItem[]) => void };\r\nexport const useRoutesAction = (): UseRoutesAction => {\r\n  return React.useContext(SetRoutesContext) as UseRoutesAction;\r\n};\r\n\r\nexport const useIs404 = () => {\r\n  const { routeMap } = React.useContext(RoutesContext) as TypeUseRoutes;\r\n  //没有就是404 直接访问子类路由\r\n  return { is404: !routeMap[location.pathname] };\r\n};\r\nexport const useCurrentRoute = () => {\r\n  const location = useLocation();\r\n  const { routeMap } = React.useContext(RoutesContext) as TypeUseRoutes;\r\n  //没有就是404 直接访问子类路由\r\n  return { currentRoute: routeMap[location.pathname] };\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Menu, Layout } from \"antd\";\r\nconst { Sider } = Layout;\r\nimport { UploadOutlined } from \"@ant-design/icons\";\r\nimport \"./style.less\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useCurrentRoute } from \"@/router/hooks\";\r\nimport { getKeyListValueTrueInMap } from \"@/utils\";\r\n\r\ninterface Props {\r\n  collapsed: boolean;\r\n  onChange?: (route: RouteItem) => void;\r\n  routes?: RouteItem[]; //侧边路由\r\n  isMultipleOpen?: boolean; //是否可以展开多个\r\n}\r\nconst Aside: React.FC<ViewProps<Props>> = (props) => {\r\n  const { collapsed, routes = [] } = props;\r\n  //路径 面包屑 列表\r\n  const { currentRoute } = useCurrentRoute();\r\n  const [openKeysMap, setOpenKeysMap] = useState<Record<string, boolean>>({});\r\n  const [selectedKeyList, setSelectedKeyList] = useState<string[]>([]);\r\n  //\r\n  useEffect(() => {\r\n    if (!currentRoute.breadCrumbRoutes) return;\r\n    const _pathList = currentRoute.breadCrumbRoutes.map((route) => route.path);\r\n    setSelectedKeyList(_pathList);\r\n    const _map: Record<string, boolean> = {};\r\n    _pathList.forEach((path) => (_map[path] = true)); //默认当前路由展开\r\n    setOpenKeysMap({ ...openKeysMap, ..._map });\r\n  }, [currentRoute]);\r\n  //\r\n  const [openKeyList, setOpenKeyList] = useState<string[]>();\r\n  useEffect(() => {\r\n    if (collapsed) return setOpenKeyList(undefined); //折叠时使用antd自带交互\r\n    setOpenKeyList(getKeyListValueTrueInMap(openKeysMap)); //回显折叠是的操作\r\n  }, [collapsed, openKeysMap]);\r\n  const history = useHistory();\r\n  const getSideMenu = (routes: RouteItem[] = []) => {\r\n    return routes\r\n      .filter((route) => !route.isHidden) //筛选不能显示的\r\n      .map((route) => {\r\n        const hasChildren = route.children;\r\n        if (hasChildren) {\r\n          return (\r\n            <Menu.SubMenu\r\n              key={route.path}\r\n              icon={<UploadOutlined />}\r\n              title={route.title || route.name}\r\n              onTitleClick={() => {\r\n                setOpenKeysMap({ ...openKeysMap, [route.path]: !openKeysMap[route.path] });\r\n                props.onChange && props.onChange(route);\r\n              }}>\r\n              {getSideMenu(route.children)}\r\n            </Menu.SubMenu>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <Menu.Item\r\n            key={route.path}\r\n            icon={<UploadOutlined />}\r\n            onClick={() => {\r\n              history.push(route.path);\r\n              props.onChange && props.onChange(route);\r\n            }}>\r\n            {route.title || route.name}\r\n          </Menu.Item>\r\n        );\r\n      });\r\n  };\r\n  //render\r\n  return (\r\n    <Sider className=\"aside\" trigger={null} collapsible collapsed={collapsed}>\r\n      <div className=\"logo\"></div>\r\n      <Menu className=\"m-menu\" theme=\"dark\" mode=\"inline\" openKeys={openKeyList} selectedKeys={selectedKeyList}>\r\n        {getSideMenu(routes)}\r\n      </Menu>\r\n    </Sider>\r\n  );\r\n};\r\nexport default React.memo(Aside);\r\n","import { useCurrentRoute } from \"@/router/hooks\";\r\nimport { useActionsConsoleLayout, useConsoleLayout } from \"@/store/console-layout\";\r\nimport React, { useEffect } from \"react\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport { Tag } from \"antd\";\r\nimport { LeftOutlined } from \"@ant-design/icons\";\r\ninterface Props {\r\n  [key: string]: any;\r\n}\r\n\r\nconst TagNav: React.FC<ViewProps<Props>> = (props) => {\r\n  const { className = \"\" } = props;\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const { visitedList } = useConsoleLayout();\r\n  const { setVisitedMap } = useActionsConsoleLayout();\r\n  const { currentRoute } = useCurrentRoute();\r\n  useEffect(() => {\r\n    if (currentRoute.redirect) return; //忽视 重定向路由\r\n    setVisitedMap({ name: currentRoute.name as string, title: currentRoute.title, path: currentRoute.path });\r\n  }, [currentRoute]);\r\n  //render\r\n  return (\r\n    <nav className={`tag-nav ${className}`}>\r\n      <Tag className=\"item\" onClick={() => history.goBack()}>\r\n        <LeftOutlined /> 返回\r\n      </Tag>\r\n      <Tag className=\"item\" onClick={() => history.push(\"/home\")}>\r\n        首页\r\n      </Tag>\r\n      {visitedList.map((route, index) => {\r\n        return (\r\n          <Tag\r\n            onClick={() => {\r\n              history.push(route.path);\r\n            }}\r\n            className={`item ${location.pathname == route.path ? \"active\" : \"\"}`}\r\n            key={`${route.path}`}\r\n            closable={index > 0}\r\n            onClose={(e) => {\r\n              e.preventDefault();\r\n              setVisitedMap({ ...route, isDelete: true });\r\n              //如果是最后一个，跳转到上一个\r\n              if (location.pathname == visitedList[visitedList.length - 1].path) {\r\n                return history.push(visitedList[visitedList.length - 2].path); //当前还没删除\r\n              }\r\n              //如果是当前，跳转到最后一个\r\n              if (location.pathname == route.path) {\r\n                history.push(visitedList[visitedList.length - 1].path);\r\n              }\r\n            }}>\r\n            {route.title || route.name}\r\n          </Tag>\r\n        );\r\n      })}\r\n    </nav>\r\n  );\r\n};\r\nexport default React.memo(TagNav);\r\n","import { useCurrentRoute } from \"@/router/hooks\";\r\nimport { Breadcrumb } from \"antd\";\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface Props {\r\n  [key: string]: any;\r\n}\r\nconst TopNavBreadcrumb: React.FC<ViewProps<Props>> = () => {\r\n  const { currentRoute } = useCurrentRoute(); //当前路由\r\n  const [breadCrumbRoutes, setBreadCrumbRoutes] = useState<RouteItem[]>([]);\r\n  useEffect(() => {\r\n    if (!currentRoute.breadCrumbRoutes) return;\r\n    setBreadCrumbRoutes(currentRoute.breadCrumbRoutes);\r\n  }, [currentRoute]);\r\n  //\r\n  const history = useHistory();\r\n  //render\r\n  return (\r\n    <Breadcrumb className=\"bread-crumbs\">\r\n      {breadCrumbRoutes.map((route, index) => {\r\n        return (\r\n          <Breadcrumb.Item key={`${route.path}-index`}>\r\n            {/* 没有限制 并且 不是最后一个 */}\r\n            {route.isLinkBreadCrumb !== false && breadCrumbRoutes.length - 1 != index ? (\r\n              <a\r\n                onClick={() => {\r\n                  history.push(route.redirect || route.path);\r\n                }}>\r\n                {route.title || route.name}\r\n              </a>\r\n            ) : (\r\n              route.title || route.name\r\n            )}\r\n          </Breadcrumb.Item>\r\n        );\r\n      })}\r\n    </Breadcrumb>\r\n  );\r\n};\r\nexport default TopNavBreadcrumb;\r\n","import { appNotification } from \"@/plugins/antd\";\r\nimport { RouterHistory } from \"@/router\";\r\nimport store from \"@/store\";\r\nimport { useUser } from \"@/store/user\";\r\nimport { DownOutlined } from \"@ant-design/icons\";\r\nimport { Dropdown, Menu } from \"antd\";\r\nimport React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\ninterface Props {\r\n  [key: string]: any;\r\n}\r\ninterface ListItem {\r\n  title: string;\r\n  to?: string;\r\n  onclick?: () => void;\r\n}\r\nconst list: ListItem[] = [\r\n  // { title: \"用户信息\" },\r\n  {\r\n    title: \"退出\",\r\n    onclick: () => {\r\n      store.dispatch({ type: \"RESET_STORE\" });\r\n      localStorage.clear();\r\n      RouterHistory.replace(\"/login\");\r\n      appNotification.success({ message: \"退出成功，请重新登录！\" });\r\n    },\r\n  },\r\n];\r\n\r\nconst UserDropdownMenu: React.FC<ViewProps<Props>> = (props) => {\r\n  const { className = \"\" } = props;\r\n  const user = useUser();\r\n  const _Menu = (\r\n    <Menu>\r\n      {list.map((item) => (\r\n        <Menu.Item key={item.title} onClick={item.onclick}>\r\n          {item.to ? <Link to={item.to}>{item.title}</Link> : item.title}\r\n        </Menu.Item>\r\n      ))}\r\n    </Menu>\r\n  );\r\n  //render\r\n  return (\r\n    <div className={className}>\r\n      <Dropdown overlay={_Menu} trigger={[\"click\"]}>\r\n        <a>\r\n          用户{user.username} <DownOutlined />\r\n        </a>\r\n      </Dropdown>\r\n    </div>\r\n  );\r\n};\r\nexport default UserDropdownMenu;\r\n","import { MenuFoldOutlined } from \"@ant-design/icons\";\r\nimport React from \"react\";\r\nimport TagNav from \"./tag-nav\";\r\nimport TopNavBreadcrumb from \"./breadcrumb\";\r\nimport UserDropdownMenu from \"./user-dropdown-menu\";\r\n\r\ninterface Props {\r\n  collapsed?: boolean;\r\n  onChangeCollapsed?: (collapsed: boolean) => void;\r\n}\r\nconst ContainerHeader: React.FC<ViewProps<Props>> = (props) => {\r\n  const { collapsed, onChangeCollapsed, className = \"\" } = props;\r\n  //render\r\n  return (\r\n    <header className={`header ${className}`}>\r\n      <section className=\"top-nav\">\r\n        <div className=\"left\">\r\n          <MenuFoldOutlined\r\n            className={`icon ${collapsed ? \"collapsed\" : \"\"}`}\r\n            onClick={() => {\r\n              onChangeCollapsed && onChangeCollapsed(!collapsed);\r\n            }}\r\n          />\r\n          <TopNavBreadcrumb></TopNavBreadcrumb>\r\n        </div>\r\n        <div className=\"right\">\r\n          <UserDropdownMenu />\r\n        </div>\r\n      </section>\r\n\r\n      <TagNav />\r\n    </header>\r\n  );\r\n};\r\nexport default ContainerHeader;\r\n","import React, { Suspense, useState } from \"react\";\r\nimport { Layout } from \"antd\";\r\nimport Aside from \"./aside\";\r\nimport ContainerHeader from \"./header\";\r\nimport { RouterView } from \"@/router\";\r\nimport LazySpin from \"@/components/lazy-spin\";\r\n\r\nconst ConsoleLayout: React.FC<ViewProps> = (props) => {\r\n  const { className = \"\" } = props;\r\n  const [collapsed, setCollapsed] = useState(false);\r\n  //render\r\n  return (\r\n    <Layout className={`layout ${className}`}>\r\n      {/*  */}\r\n      <Aside collapsed={collapsed} routes={props.to?.children} />\r\n      {/* 容器 */}\r\n      <Layout.Content className=\"container\">\r\n        {/*  */}\r\n        <ContainerHeader\r\n          collapsed={collapsed}\r\n          onChangeCollapsed={(v) => {\r\n            setCollapsed(v);\r\n          }}\r\n        />\r\n        {/* 主内容区 */}\r\n        <Suspense fallback={<LazySpin />}>\r\n          <RouterView routes={props.to?.children || []}></RouterView>\r\n        </Suspense>\r\n      </Layout.Content>\r\n    </Layout>\r\n  );\r\n};\r\nexport default ConsoleLayout;\r\n","import Login from \"@/views/login/index\";\r\nimport Page404 from \"@/views/page404\";\r\nimport ConsoleLayout from \"@/console-layout\";\r\nimport React from \"react\";\r\n\r\nimport { UserOutlined } from \"@ant-design/icons\";\r\n// import { sleep } from \"@/utils\";\r\n// import Home from \"@/views/home\";\r\n/**\r\n * 同步路由\r\n */\r\nexport const syncRoutes: RouteItem[] = [\r\n  {\r\n    path: \"/\",\r\n    exact: true,\r\n    redirect: \"/console\",\r\n  },\r\n  {\r\n    path: \"/home\",\r\n    name: \"home\",\r\n    exact: true,\r\n    // component: Home,\r\n    //测试 首屏优化\r\n    component: React.lazy(async () => {\r\n      // await sleep(5);\r\n      return import(\"@/views/home/index\");\r\n    }),\r\n  },\r\n  {\r\n    path: \"/login\",\r\n    name: \"login\",\r\n    exact: true,\r\n    component: Login,\r\n  },\r\n\r\n  {\r\n    path: \"/404\",\r\n    name: \"404\",\r\n    exact: true,\r\n    component: Page404,\r\n  },\r\n];\r\n\r\n/**\r\n * 默认路由\r\n */\r\nexport const defaultRoute: RouteItem = {\r\n  path: \"*\",\r\n  redirect: \"/404\",\r\n};\r\n/**\r\n * 控制台路由\r\n */\r\nexport const consoleRoute: RouteItem = {\r\n  path: \"/console\",\r\n  name: \"console\",\r\n  title: \"控制台\",\r\n  component: ConsoleLayout,\r\n  isAuth: true,\r\n  redirect: \"/console/auth-manage\",\r\n  children: [\r\n    {\r\n      path: \"/console/doing\",\r\n      name: \"doing\",\r\n      isAuth: false,\r\n      component: React.lazy(async () => import(\"@/views/doing\")),\r\n      icon: UserOutlined,\r\n    },\r\n    {\r\n      path: \"/console/demo\",\r\n      name: \"demo\",\r\n      component: React.lazy(() => import(\"@/views/demo/index\")),\r\n      icon: UserOutlined,\r\n      children: [\r\n        {\r\n          path: \"/console/demo/hook-modal\",\r\n          name: \"hook-modal\",\r\n          component: React.lazy(() => import(\"@/views/demo/hook-modal/index\")),\r\n          icon: UserOutlined,\r\n        },\r\n        {\r\n          path: \"/console/demo/hook-log\",\r\n          name: \"hook-log\",\r\n          component: React.lazy(() => import(\"@/views/demo/hook-log\")),\r\n          icon: UserOutlined,\r\n        },\r\n        {\r\n          path: \"/console/demo/vs-version\",\r\n          name: \"vs-version\",\r\n          component: React.lazy(() => import(\"@/views/demo/vs-version/index\")),\r\n          icon: UserOutlined,\r\n        },\r\n      ],\r\n    },\r\n    // {\r\n    //   path: \"/console/nested\",\r\n    //   name: \"嵌套\",\r\n    //   component: react.lazy(() => import(\"@/views/nested/index\")),\r\n    //   icon: UserOutlined,\r\n    //   children: [\r\n    //     {\r\n    //       path: \"/console/nested/nested-1\",\r\n    //       name: \"嵌套-1\",\r\n    //       component: react.lazy(() => import(\"@/views/nested/nested-1\")),\r\n    //       icon: UserOutlined,\r\n    //     },\r\n    //     {\r\n    //       path: \"/console/nested/nested-2\",\r\n    //       name: \"嵌套-2\",\r\n    //       component: react.lazy(async () => {\r\n    //         await sleep();\r\n    //         return import(\"@/views/nested/nested-2\");\r\n    //       }),\r\n    //       icon: UserOutlined,\r\n    //     },\r\n    //   ],\r\n    // },\r\n    {\r\n      path: \"/console/auth-manage\",\r\n      name: \"auth-manage\",\r\n      title: \"权限管理\",\r\n      component: React.lazy(() => import(\"@/views/auth-manage/index\")),\r\n      icon: UserOutlined,\r\n      redirect: \"/console/auth-manage/role-manage\",\r\n      children: [\r\n        {\r\n          path: \"/console/auth-manage/role-manage\",\r\n          name: \"role-manage\",\r\n          title: \"角色管理\",\r\n          component: React.lazy(() => import(\"@/views/auth-manage/role-manage/index\")),\r\n          icon: UserOutlined,\r\n        },\r\n        {\r\n          path: \"/console/auth-manage/user-manage\",\r\n          name: \"UserManage\",\r\n          title: \"用户管理\",\r\n          component: React.lazy(() => import(\"@/views/auth-manage/user-manage/index\")),\r\n          icon: UserOutlined,\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      path: \"/console/regular\",\r\n      name: \"Regular\",\r\n      title: \"正则\",\r\n      component: React.lazy(() => import(\"@/views/regular/index\")),\r\n      icon: UserOutlined,\r\n    },\r\n    {\r\n      path: \"/console/article\",\r\n      name: \"ArticleManage\",\r\n      title: \"文章管理\",\r\n      component: React.lazy(() => import(\"@/views/article-manage/index\")),\r\n      icon: UserOutlined,\r\n      // isLinkBreadCrumb: false, //是否点击是否跳转\r\n      redirect: \"/console/article/list\",\r\n      children: [\r\n        {\r\n          path: \"/console/article/list\",\r\n          name: \"ArticleList\",\r\n          title: \"文章列表\",\r\n          component: React.lazy(() => import(\"@/views/article-manage/list\")),\r\n          icon: UserOutlined,\r\n        },\r\n        {\r\n          path: \"/console/article/create\",\r\n          name: \"ArticleCreate\",\r\n          title: \"新建文章\",\r\n          component: React.lazy(() => import(\"@/views/article-manage/create\")),\r\n          icon: UserOutlined,\r\n          isHidden: true,\r\n        },\r\n        {\r\n          path: \"/console/article/update\",\r\n          name: \"ArticleUpdate\",\r\n          title: \"编辑文章\",\r\n          component: React.lazy(() => import(\"@/views/article-manage/update\")),\r\n          icon: UserOutlined,\r\n          isHidden: true,\r\n        },\r\n      ],\r\n    },\r\n  ],\r\n};\r\n/**\r\n * 异步动态响应式路由\r\n */\r\nexport const asyncRoutes: RouteItem[] = [consoleRoute];\r\nexport const WhitePathList = syncRoutes.map((item) => item.path);\r\n//\r\nimport { createProvider } from \"./hooks\";\r\n\r\n//asyncRoutes defaultRoute\r\n//[..syncRoutes, ..asyncRoutes, defaultRoute]\r\n//[..syncRoutes,  defaultRoute]\r\nexport const Provider = createProvider([...syncRoutes, defaultRoute]);\r\nexport { useRoutes, useRoutesAction, useIs404 } from \"./hooks\";\r\nexport { default as RouterView } from \"./router-view\";\r\nimport { createBrowserHistory } from \"history\";\r\nexport const RouterHistory = createBrowserHistory();\r\n","import { cloneDeep } from \"lodash\";\r\n/**\r\n * 递归筛选路由\r\n * @param authList\r\n * @param routeList\r\n * @param _RouteList\r\n * @returns\r\n */\r\nconst filterRouteList = (authList: string[], routeList: RouteItem[]) => {\r\n  return routeList.filter((route) => {\r\n    if (!authList.includes(route.path)) return false;\r\n    if (route.children) route.children = filterRouteList(authList, route.children);\r\n    return true;\r\n  });\r\n};\r\n/**\r\n * 生成权限路由\r\n * @param userInfo\r\n * @param authList\r\n */\r\nexport const generatorAuthRouteList = (userInfo: ResDataUserInfo, routeList: RouteItem[]) => {\r\n  if (userInfo.roleName == \"superAdmin\") return cloneDeep(routeList);\r\n  if (!userInfo.authList[0]) return [];\r\n  return filterRouteList(userInfo.authList, cloneDeep(routeList));\r\n};\r\n","import { reqLogin, reqUserInfo } from \"@/apis\";\r\nimport { asyncRoutes, defaultRoute, syncRoutes, useRoutesAction } from \"@/router\";\r\nimport { generatorAuthRouteList } from \"@/router/utils\";\r\nimport { useAppDispatch, useSelector } from \"@/store-hooks\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\ntype State = {\r\n  username: string;\r\n  authList?: string[];\r\n  token: string;\r\n  id: string;\r\n};\r\nconst initialState: State = {\r\n  username: \"\",\r\n  authList: undefined,\r\n  token: localStorage.getItem(\"token\") || \"\",\r\n  id: localStorage.getItem(\"userId\") || \"\",\r\n};\r\n\r\nexport const slice = createSlice({\r\n  name: \"user\",\r\n  initialState,\r\n  reducers: {\r\n    setUserInfo(state, { payload }: Action<{ username?: string; token?: string; authList?: string[] }>): State {\r\n      return { ...state, ...payload };\r\n    },\r\n  },\r\n});\r\n\r\nexport const useUser = (): State => {\r\n  return useSelector((state) => state.user);\r\n};\r\n\r\nexport const actions = slice.actions;\r\n/** hooks 就是运行时 */\r\nexport const useUserDispatch = () => {\r\n  const dispatch = useAppDispatch();\r\n  const { setRoutes } = useRoutesAction();\r\n  const resetRoutes = (userInfo: ResDataUserInfo) => {\r\n    const authRoutes = generatorAuthRouteList(userInfo, [...asyncRoutes]);\r\n    setRoutes([...syncRoutes, ...authRoutes, defaultRoute]);\r\n  };\r\n\r\n  return {\r\n    fetchUserInfo: async (data: ReqDataUserInfo) => {\r\n      const res = await reqUserInfo(data);\r\n      if (res.code != 200) {\r\n        dispatch(slice.actions.setUserInfo({ authList: [] })); //不为undefined说明加载过， [] 不可访问任何权限路由\r\n        return res;\r\n      }\r\n      resetRoutes(res.data);\r\n      dispatch(slice.actions.setUserInfo(res.data));\r\n      //留给页面使用\r\n      return res;\r\n    },\r\n    fetchLogin: async (data: ReqDataLogin) => {\r\n      const res = await reqLogin(data);\r\n      if (res.code != 200) return res; //直接给页面使用\r\n      localStorage.setItem(\"token\", res.data.token);\r\n      localStorage.setItem(\"userId\", String(res.data.id));\r\n      resetRoutes(res.data);\r\n      dispatch(slice.actions.setUserInfo(res.data));\r\n      return res;\r\n    },\r\n  };\r\n};\r\n\r\n// store 新建使用\r\nexport default slice.reducer;\r\n","/**对antd的封装 */\r\nimport { message, notification } from \"antd\";\r\nimport { ArgsProps } from \"node_modules/antd/lib/message/index.d\";\r\nimport { ArgsProps as NotificationArgsProps } from \"node_modules/antd/lib/notification/index.d\";\r\ntype NotificationType = \"error\" | \"info\" | \"warning\" | \"warn\" | \"success\";\r\nconst messageFn = (type: MessageType, option?: JointContent) => {\r\n  message.destroy();\r\n  message[type](option);\r\n};\r\nconst notificationFn = (type: NotificationType, option: NotificationArgsProps) => {\r\n  notification.destroy();\r\n  notification[type](option);\r\n};\r\n/** 封装 antd notification 去重提示 */\r\nexport const appNotification = {\r\n  /**兼容antd 但主要为直接的文案 */\r\n  success: (content: NotificationArgsProps) => notificationFn(\"success\", content),\r\n  warn: (content: NotificationArgsProps) => notificationFn(\"warn\", content),\r\n  error: (content: NotificationArgsProps) => notificationFn(\"error\", content),\r\n  info: (content: NotificationArgsProps) => notificationFn(\"info\", content),\r\n};\r\n\r\ndeclare type ConfigContent = React.ReactNode | string;\r\ndeclare type JointContent = ConfigContent | ArgsProps;\r\ntype MessageType = \"error\" | \"info\" | \"warning\" | \"loading\" | \"warn\" | \"success\";\r\n/** 封装 antd message 去重提示 */\r\nexport const appMessage = {\r\n  /**兼容antd 但主要为直接的文案 */\r\n  success: (content: ConfigContent) => messageFn(\"success\", content),\r\n  warn: (content: ConfigContent) => messageFn(\"warn\", content),\r\n  error: (content: ConfigContent) => messageFn(\"error\", content),\r\n  info: (content: ConfigContent) => messageFn(\"info\", content),\r\n};\r\n","import { TypedUseSelectorHook, useDispatch as useReduxDispatch, useSelector as useReduxSelector } from \"react-redux\";\r\n\r\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\r\n// import type { ValidateSliceCaseReducers } from \"@reduxjs/toolkit\";\r\n// Infer the `RootState` and `AppDispatch` types from the store itself\r\nimport store from \"@/store/index\";\r\nexport type RootState = ReturnType<typeof store.getState>;\r\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\r\nexport type Dispatch = typeof store.dispatch;\r\n\r\n/** 同步| 异步请求 */\r\nexport const useAppDispatch = (): Reduxjs.Dispatch => useReduxDispatch<Dispatch>();\r\nexport const useSelector: TypedUseSelectorHook<RootState> = useReduxSelector;\r\n","import { useAppDispatch, useSelector } from \"@/store-hooks\";\r\nimport { createSlice } from \"@reduxjs/toolkit\";\r\ntype VisitedRouteItem = { path: string; title?: string; name: string; isDelete?: boolean };\r\nconst initialState = {\r\n  visitedMap: {} as Record<string, VisitedRouteItem>,\r\n};\r\ntype State = typeof initialState;\r\n\r\nexport const slice = createSlice({\r\n  name: \"consoleLayout\",\r\n  initialState,\r\n  reducers: {\r\n    _setVisitedMap(state, action: Action<VisitedRouteItem>) {\r\n      return { ...state, visitedMap: { ...state.visitedMap, [action.payload.path]: action.payload } };\r\n    },\r\n    /**减去 */\r\n    _removeVisitedRoute(state: State, action: Action<VisitedRouteItem>) {\r\n      return { ...state, visitedMap: { ...state.visitedMap, [action.payload.path]: action.payload } };\r\n    },\r\n  },\r\n});\r\n\r\nexport const useConsoleLayout = () => {\r\n  return useSelector(({ consoleLayout }) => {\r\n    return {\r\n      ...consoleLayout,\r\n      /** 筛选出有访问路由对象的列表 */\r\n      get visitedList() {\r\n        return Object.keys(consoleLayout.visitedMap)\r\n          .filter((key) => !consoleLayout.visitedMap[key].isDelete)\r\n          .map((k) => consoleLayout.visitedMap[k]);\r\n      },\r\n    };\r\n  });\r\n};\r\n\r\nexport const useActionsConsoleLayout = () => {\r\n  const dispatch = useAppDispatch();\r\n  return {\r\n    setVisitedMap(data: VisitedRouteItem) {\r\n      dispatch(slice.actions._setVisitedMap(data));\r\n    },\r\n  };\r\n};\r\n\r\n// store 新建使用\r\nexport default slice.reducer;\r\n","/**\r\n * 模拟加载时间\r\n * @time 默认2s\r\n */\r\nexport const sleep = (time = 2) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve(true);\r\n    }, time * 1000);\r\n  });\r\n};\r\n\r\n/**\r\n * 去除模板字符串第一个换行\r\n * @param str\r\n * @returns\r\n */\r\nexport const removeFirstLineOfTemplateString = (str: string) => str.replace(/\\n/, \"\");\r\n\r\n/**\r\n * 获得序列号\r\n * @param page\r\n * @param index\r\n */\r\nexport const getTableSN = (page: ReqPageData, index: number) =>\r\n  (Number(page.current) - 1) * Number(page.pageSize) + index + 1;\r\n/**\r\n * 获得key列表  map中值为真\r\n * @param map\r\n * @returns\r\n */\r\nexport const getKeyListValueTrueInMap = (map: Record<string, boolean>): string[] =>\r\n  Object.entries(map)\r\n    .filter(([, v]) => v)\r\n    .map(([key]) => key);\r\n"],"sourceRoot":""}